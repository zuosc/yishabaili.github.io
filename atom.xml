<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一杀百里的博客</title>
  
  <subtitle>愿无岁月可回头，且以情深共余生😘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zuosc.github.io/"/>
  <updated>2018-06-27T03:08:14.274Z</updated>
  <id>https://zuosc.github.io/</id>
  
  <author>
    <name>yishabaili</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Linux(Ubuntu)中搭建饥荒联机版服务器</title>
    <link href="https://zuosc.github.io/2018/06/21/%E5%9C%A8Linux(Ubuntu)%E4%B8%AD%E6%90%AD%E5%BB%BA%E9%A5%A5%E8%8D%92%E8%81%94%E6%9C%BA%E7%89%88%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://zuosc.github.io/2018/06/21/在Linux(Ubuntu)中搭建饥荒联机版服务器/</id>
    <published>2018-06-21T11:02:49.000Z</published>
    <updated>2018-06-27T03:08:14.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这周Klei家打折，手一抖就把饥荒联机版(Don’t Starve Together)和两个DLC一起打包买回家了(剁手！)。联机版最大的玩点就是可以和很多人一起玩，而且可以自己搭建服务器。想着前一段时间买的腾讯云服务器(继续剁手！)也算闲置在那里，就干脆闲置利用起来吧。<br><img src="https://cdn.steamstatic.com.8686c.com/steam/apps/322330/header_alt_assets_0.jpg" alt="Don&#39;t Starve Together"></p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p>实际上，Klie的文档还是写的非常非常详细的，不过只有纯英文的文档，这可能吓退了一部分人。如果真的认真去看了，就会发现英文文档都是比较简单的英语，图片也配的很详细，看懂无压力。<br>这里我有点懒，哪天有空再翻译吧，所以就直接贴出文档地址：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=590565473" target="_blank" rel="noopener">How to setup dedicated server with cave on Linux</a></p><h2 id="搭建注意点"><a href="#搭建注意点" class="headerlink" title="搭建注意点"></a>搭建注意点</h2><p>1、游戏的主体文件是在你安装的目录里的。世界的搭建，配置还有数据是在运行游戏的账户下面的，比如你的游戏运行账户是dst，那所有的数据都在  /home/dst/.klei/DoNotStarveTogether 里面。知道这点很重要。</p><p>2、因为第一点的原因，所以强烈推荐根据官方文档里的步骤，创建一个非root组的账户。然后剩余所有的操作全都在这个用户里进行操作。这个是非常重要的，第一遍看文档的时候没注意到用户的切换，还有脚本会重置服务器mod配置文件(后面会说到)，导致了一直失败。后来耐心重读了一遍文档，才发现问题所在。</p><p>3、创建的账户，密码最好弄强一点。不要是账号是dst，密码也是dst。太容易被黑客扫描出来了。</p><p>4、我用的是腾讯云服务器，加了安全组。 饥荒联机版默认使用的是UDP 10999端口。如果有类似安全组里的设置，配置一下就好。</p><p>5、推荐配置里，默认游戏模式的是生存(survival)。如果是纯新手的话，推荐改为无尽(endless)模式吧。高玩略过这条~</p><h2 id="配置服务器Mod"><a href="#配置服务器Mod" class="headerlink" title="配置服务器Mod"></a>配置服务器Mod</h2><p>官方依然有非常详细的文档，当然依然是纯英文的，并且依然也是很容易看得懂的英文。文档地址：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=591543858" target="_blank" rel="noopener">How to install,configure and update mods on Dedicated Server</a></p><h2 id="配置服务器Mod注意点"><a href="#配置服务器Mod注意点" class="headerlink" title="配置服务器Mod注意点"></a>配置服务器Mod注意点</h2><p>如果你是按照官方文档搭建和配置的，会有一个update.sh脚本。这个脚本的作用是更新游戏，并且<strong>校验</strong>游戏，然后重启游戏。我反复确认了这个脚本，最终确定：如果执行脚本，其中的<strong>校验</strong>命令，会导致配置服务器Mod文件dedicated_server_mods_setup.lua被重置。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /home/dst/server_dst/bin/update.sh</span></span><br><span class="line"><span class="comment"># update of server</span></span><br><span class="line">screen -dr dst_server1 -X quit</span><br><span class="line">screen -dr dst_server2 -X quit</span><br><span class="line">cd /home/dst</span><br><span class="line">./steamcmd.sh +login anonymous +force_install_dir /home/dst/server_dst +app_update 343050 validate +quit</span><br><span class="line">sleep 10</span><br><span class="line">sh /home/dst/server_dst/bin/restart.sh</span><br><span class="line">sh /home/dst/server_dst/bin/restart2.sh</span><br></pre></td></tr></table></figure></p><p>最后我思考了下，决定把脚本里的<strong>validate</strong>参数给移除了，让游戏直接更新，不校验，然后重启。运行了一周也没啥问题，所以就这样处理了吧。</p><h2 id="个人使用到的服务器Mod"><a href="#个人使用到的服务器Mod" class="headerlink" title="个人使用到的服务器Mod"></a>个人使用到的服务器Mod</h2><p>无Mod，不饥荒。搭建和玩的过程中，发现和使用一些mod，这部分内容纯属个人分享。有兴趣的话，可以把一下内容选择性的或者全部直接拷贝到 /home/dst/server_dst/mods/dedicated_server_mods_setup.lua 文件中。有推荐的Mod的话，欢迎留言分享哦~<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">-<span class="comment">#Global Position</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"378160973"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Ancient Altar</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"481765222"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Health Info</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"375859599"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Fast Travel</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"458587300"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Chinese package</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"1301033176"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#A Big Bag</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"810443397"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Geometric Placement</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"351325790"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Syelza</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"804317397"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#wukong</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"666132449"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#No Thermal Stone Durability</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"466732225"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Display Food Values</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"347079953"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Increased Stack size</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"374550642"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment">#Wormhole Marks</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"362175979"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment"># Inventory Slots</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"786556008"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment"># Restart</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"462434129"</span>)</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">--<span class="comment"># 简易血条DST</span></span></span><br><span class="line"><span class="ruby">ServerModSetup(<span class="string">"1207269058"</span>)</span></span><br></pre></td></tr></table></figure></p><h2 id="运维游戏"><a href="#运维游戏" class="headerlink" title="运维游戏"></a>运维游戏</h2><p>一开始不懂生存模式和无尽模式的区别，默认配置了为生存。结果玩了一晚上之后，世界被默认重置了 - -。 后来排查日志，也没发现特别的东西，只是发现有人凌晨5点上线了。推测是他上线死亡了，然后下线了，世界里没有活人，120秒之后就被重置了！！<br>经过这件事之后，也意识到了，如果服务器出问题或者世界被恶意破坏，那就非常难过了。所以要怎么存档和备份数据呢？大致过程如下：</p><p>1、存档文件的位置。<br>如果你是按照官方教程操作的，那么所有的存档文件都在 /home/dst/.klei/DoNotStarveTogether 目录下，也就是你所使用的用户的 .klei/DoNotStarveTogether 目录下。</p><p>2、定期备份存档文件。<br>存档文件还是不大的，所以我选择了每小时定时备份，备份7天的数据。然后存到其他位置。脚本如下：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#！/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#创建临时文件夹</span></span><br><span class="line">mkdir <span class="meta-keyword">/tmp/</span>backup_dst</span><br><span class="line"></span><br><span class="line"><span class="meta">#复制文档到tmp文件夹</span></span><br><span class="line">cp -r <span class="meta-keyword">/home/</span>dst/.klei/DoNotStarveTogether/MyDediServer <span class="meta-keyword">/tmp/</span>backup_dst</span><br><span class="line"></span><br><span class="line"><span class="meta">#根据时间创建压缩文件</span></span><br><span class="line">tar -zcvf <span class="meta-keyword">/home/</span>dst/.klei/DoNotStarveTogether/back_MyDediServer/bak_$(date +%Y-%m-%d_%k).tar.gz <span class="meta-keyword">/tmp/</span>backup_dst</span><br><span class="line"></span><br><span class="line"><span class="meta">#移除临时文件件</span></span><br><span class="line">rm -rf <span class="meta-keyword">/tmp/</span>backup_dst</span><br><span class="line"></span><br><span class="line"><span class="meta">#移除超过7天的备份压缩包</span></span><br><span class="line">find <span class="meta-keyword">/home/</span>dst/.klei/DoNotStarveTogether/back_MyDediServer  -mtime +<span class="number">7</span> -name <span class="string">"*.tar.gz"</span> -exec rm -<span class="class">rf </span>&#123;&#125; \;</span><br></pre></td></tr></table></figure></p><p>然后配置一个crontab定时任务，每小时执行一次就好了。</p><p>3、定期备份到外部存储（腾讯云文件存储）。<br>上面的脚本只是备份到服务器里，万一哪天系统被搞崩了，数据还是丢。所以我利用腾讯云的文件存储，挂载了一个免费10G大小的外部存储。然后利用脚本再备份一份。我的外部存储挂载目录是/local，脚本如下：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#备份文件</span></span><br><span class="line">cp /home/dst/.klei/DoNotStarveTogether/back_MyDediServer/bak<span class="number">_</span>$(date +%Y-%m-%d_%H).tar.gz /<span class="keyword">local</span>/dst_bak</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除超过7天的备份压缩包</span></span><br><span class="line">find /<span class="keyword">local</span>/dst_bak  -mtime +<span class="number">14</span> -name <span class="string">"*.tar.gz"</span> -<span class="keyword">exec</span> rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure></p><p>这里我偷了个懒，这个脚本是必须要在上一个脚本执行完之后才可以执行的，因为直接利用时间生成的压缩文件，直接copy的。不推荐这样做，毕竟这样依赖是不好的。不过我也懒得搞了，就这样吧 - -。</p><p>4、硬盘快照（腾讯云定期快照）<br>万一服务器被人家黑了（哪里那么多万一哦，小破服务器谁搞你呢 - -。），删除了整个系统，利用快照也能救回来。默认账户是只有手动快照的，定期快照开工单申请一下就好了，秒开。开启以后，直接每天定时快照就好了。<br>这样应该万无一失了吧 - -。</p><h2 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h2><p>没写成一键脚本，需要手动改下。大致过程如下：</p><p>1、停止正在运行的服务<br>进入两个creen，然后control+c停止就好了<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止服务器：两个screen</span></span><br><span class="line">screen -r dst_server1</span><br><span class="line">screen -r dst_server2</span><br></pre></td></tr></table></figure></p><p>2、备份目前现有的存档，通过指定的备份文件还原<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#备份服务器</span></span><br><span class="line">mv <span class="regexp">/home/dst/</span>.klei<span class="regexp">/DoNotStarveTogether/MyDediServer/</span> <span class="regexp">/home/dst/</span>.klei/DoNotStarveTogether/MyDediServer_tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压备份文件</span></span><br><span class="line">tar -xzvf <span class="regexp">/home/dst/</span>.klei/DoNotStarveTogether/back_MyDediServer/bak_2018<span class="number">-06</span><span class="number">-21</span>_14.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#移动文件</span></span><br><span class="line">mv <span class="regexp">/home/dst/</span>.klei<span class="regexp">/DoNotStarveTogether/back_MyDediServer/tmp/backup_dst/MyDediServer/</span> <span class="regexp">/home/dst/</span>.klei<span class="regexp">/DoNotStarveTogether/</span></span><br></pre></td></tr></table></figure></p><p>3、重启服务<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh <span class="meta-keyword">/home/</span>dst/server_dst<span class="meta-keyword">/bin/</span>restart.sh </span><br><span class="line">sh <span class="meta-keyword">/home/</span>dst/server_dst<span class="meta-keyword">/bin/</span>restart2.sh</span><br></pre></td></tr></table></figure></p><p>4、清理残留<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf <span class="regexp">/home/</span>dst<span class="regexp">/.klei/</span>DoNotStarveTogether/MyDediServer_tmp</span><br><span class="line">rm -rf <span class="regexp">/home/</span>dst<span class="regexp">/.klei/</span>DoNotStarveTogether<span class="regexp">/back_MyDediServer/</span>tmp</span><br></pre></td></tr></table></figure></p><h2 id="常用的脚本"><a href="#常用的脚本" class="headerlink" title="常用的脚本"></a>常用的脚本</h2><p>1、查看游戏运行日志<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Master运行日志</span></span><br><span class="line">tail -f <span class="regexp">/home/dst/</span>.klei/DoNotStarveTogether/MyDediServer/Master/server_log.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 洞穴运行日志</span></span><br><span class="line">tail -f <span class="regexp">/home/dst/</span>.klei/DoNotStarveTogether/MyDediServer/Caves/server_log.txt</span><br></pre></td></tr></table></figure></p><p>2、更新、重启脚本<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">更新脚本  <span class="keyword">sh</span> /home/dst/server_dst/bin/<span class="keyword">update</span>.<span class="keyword">sh</span></span><br><span class="line"></span><br><span class="line">重启脚本 <span class="keyword">sh</span> /home/dst/server_dst/bin/restart.<span class="keyword">sh</span> </span><br><span class="line">重启脚本2 <span class="keyword">sh</span> /home/dst/server_dst/bin/restart2.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></p><h2 id="饥荒游戏群"><a href="#饥荒游戏群" class="headerlink" title="饥荒游戏群"></a>饥荒游戏群</h2><p>欢迎加入😏~<br>QQ Group： 0x2f9f24e9 (Hexadecimal)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这周Klei家打折，手一抖就把饥荒联机版(Don’t Starve Together)和两个DLC一起打包买回家了(剁手！)。联机版最大的玩
      
    
    </summary>
    
    
      <category term="饥荒" scheme="https://zuosc.github.io/tags/%E9%A5%A5%E8%8D%92/"/>
    
      <category term="饥荒联机版" scheme="https://zuosc.github.io/tags/%E9%A5%A5%E8%8D%92%E8%81%94%E6%9C%BA%E7%89%88/"/>
    
      <category term="Don&#39;t Starve Together" scheme="https://zuosc.github.io/tags/Don-t-Starve-Together/"/>
    
      <category term="ubuntu" scheme="https://zuosc.github.io/tags/ubuntu/"/>
    
      <category term="DoNotStarveTogether" scheme="https://zuosc.github.io/tags/DoNotStarveTogether/"/>
    
      <category term="Linux" scheme="https://zuosc.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>新服务器(Ubuntu)基本配置</title>
    <link href="https://zuosc.github.io/2018/02/24/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8(Ubuntu)%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>https://zuosc.github.io/2018/02/24/新服务器(Ubuntu)基本配置/</id>
    <published>2018-02-24T14:00:00.000Z</published>
    <updated>2018-02-24T14:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span>   <span class="comment">//更新</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> -y install language-pack-zh-hans  <span class="comment">//安装中文包</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> upgrade  <span class="comment">//更新系统到最新</span></span><br></pre></td></tr></table></figure><h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install htop  <span class="comment">// htop</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="keyword">get</span> install screenfetch <span class="comment">//screenfetch</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h2&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://zuosc.github.io/tags/ubuntu/"/>
    
      <category term="新服务器" scheme="https://zuosc.github.io/tags/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu中安装Transmission笔记</title>
    <link href="https://zuosc.github.io/2018/01/09/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Transmission%E7%AC%94%E8%AE%B0/"/>
    <id>https://zuosc.github.io/2018/01/09/在Ubuntu中安装Transmission笔记/</id>
    <published>2018-01-09T12:39:49.000Z</published>
    <updated>2018-06-21T09:37:36.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://transmissionbt.com/" target="_blank" rel="noopener">Transmission</a>是一种BitTorrent客户端，特点是一个跨平台的后端和其上的简洁的用户界面。Transmission以MIT许可证和GNU通用公共许可证双许可证授权，因此是一款自由软件。挂PT的利器！</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>比较成熟的软件在Ubuntu中安装一般是很简单的，直接apt-get就好了<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install transmission-daemon</span><br></pre></td></tr></table></figure></p><p>有部分版本的系统，找不到软件。这种情况，一般先apt-get update一下。如果还是不行，就百度找下源吧,配置上软件的源就可以了，我这边一遍过，就不多说了。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Transmission的配置文件settings.json，默认在 /etc/transmission-daemon/目录下。安装完毕后，我们首先停止transmission软件，停止命令：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>transmission-daemon stop</span><br></pre></td></tr></table></figure></p><p>然后打开setting.json文件，有如下配置：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="attr">    "alt-speed-down":</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "alt-speed-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "alt-speed-time-begin":</span> <span class="number">540</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "alt-speed-time-day":</span> <span class="number">127</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "alt-speed-time-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "alt-speed-time-end":</span> <span class="number">1020</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "alt-speed-up":</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "bind-address-ipv4":</span> <span class="string">"0.0.0.0"</span><span class="string">,</span>  <span class="comment">#开启IPV4地址绑定</span></span><br><span class="line"><span class="attr">    "bind-address-ipv6":</span> <span class="string">"::"</span><span class="string">,</span> <span class="comment">#开启IPV6地址绑定</span></span><br><span class="line"><span class="attr">    "blocklist-enabled":</span> <span class="literal">false</span><span class="string">,</span> <span class="comment">#启用黑名单</span></span><br><span class="line"><span class="attr">    "blocklist-url":</span> <span class="string">"http://www.example.com/blocklist"</span><span class="string">,</span> <span class="comment">#黑名单地址</span></span><br><span class="line"><span class="attr">    "cache-size-mb":</span> <span class="number">4</span><span class="string">,</span> </span><br><span class="line"><span class="attr">    "dht-enabled":</span> <span class="literal">false</span><span class="string">,</span> <span class="comment">#DTH启用，这里我们要关闭</span></span><br><span class="line"><span class="attr">    "download-dir":</span> <span class="string">"/home/transmission-daemon/downloads"</span><span class="string">,</span> <span class="comment">#默认下载目录</span></span><br><span class="line"><span class="attr">    "download-limit":</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "download-limit-enabled":</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "download-queue-enabled":</span> <span class="literal">true</span><span class="string">,</span> <span class="comment">#启用下载队列</span></span><br><span class="line"><span class="attr">    "download-queue-size":</span> <span class="number">40</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "encryption":</span> <span class="number">2</span><span class="string">,</span> <span class="comment">#修改为2</span></span><br><span class="line"><span class="attr">    "idle-seeding-limit":</span> <span class="number">30</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "idle-seeding-limit-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "incomplete-dir":</span> <span class="string">"/var/lib/transmission-daemon/Downloads"</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "incomplete-dir-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "lpd-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "max-peers-global":</span> <span class="number">2000</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "message-level":</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "peer-congestion-algorithm":</span> <span class="string">""</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "peer-id-ttl-hours":</span> <span class="number">6</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "peer-limit-global":</span> <span class="number">2000</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "peer-limit-per-torrent":</span> <span class="number">500</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "peer-port":</span> <span class="number">51413</span><span class="string">,</span> <span class="comment">#端口</span></span><br><span class="line"><span class="attr">    "peer-port-random-high":</span> <span class="number">65535</span><span class="string">,</span> <span class="comment">#端口范围最高值</span></span><br><span class="line"><span class="attr">    "peer-port-random-low":</span> <span class="number">49152</span><span class="string">,</span> <span class="comment">#端口范围最低值</span></span><br><span class="line"><span class="attr">    "peer-port-random-on-start":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "peer-socket-tos":</span> <span class="string">"default"</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "pex-enabled":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "port-forwarding-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "preallocation":</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "prefetch-enabled":</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "queue-stalled-enabled":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "queue-stalled-minutes":</span> <span class="number">30</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "ratio-limit":</span> <span class="number">2</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "ratio-limit-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "rename-partial-files":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "rpc-authentication-required":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "rpc-bind-address":</span> <span class="string">"0.0.0.0"</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "rpc-enabled":</span> <span class="literal">true</span><span class="string">,</span> <span class="comment">#是否启用RPC，设置为True</span></span><br><span class="line"><span class="attr">    "rpc-password":</span> <span class="string">""</span><span class="string">,</span> <span class="comment">#密码，编辑的时候输入明文密码，保持之后，自动变为加密的</span></span><br><span class="line"><span class="attr">    "rpc-port":</span> <span class="number">12333</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "rpc-url":</span> <span class="string">"/transmission/"</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "rpc-username":</span> <span class="string">"username"</span><span class="string">,</span> <span class="comment">#用户名</span></span><br><span class="line"><span class="attr">    "rpc-whitelist":</span> <span class="string">""</span><span class="string">,</span> <span class="comment">#白名单IP,多个IP用‘,'分隔</span></span><br><span class="line"><span class="attr">    "rpc-whitelist-enabled":</span> <span class="literal">true</span><span class="string">,</span> <span class="comment">#是否启用白名单，如果需要可以修改为true</span></span><br><span class="line"><span class="attr">    "scrape-paused-torrents-enabled":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "script-torrent-done-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "script-torrent-done-filename":</span> <span class="string">""</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "seed-queue-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "seed-queue-size":</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "speed-limit-down":</span> <span class="number">300</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "speed-limit-down-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "speed-limit-up":</span> <span class="number">500</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "speed-limit-up-enabled":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "start-added-torrents":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "trash-original-torrent-files":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "umask":</span> <span class="number">18</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "upload-limit":</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "upload-limit-enabled":</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "upload-slots-per-torrent":</span> <span class="number">14</span><span class="string">,</span></span><br><span class="line"><span class="attr">    "utp-enabled":</span> <span class="literal">true</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p><p>主要需要配置的点，基本已经在上面打了备注。根据英文名，大致也能知道哪些可以修改。<br>如其中的白名单设置，个人建议启用。可以在机器前面加上Nginx做反向代理，白名单设置为Nginx所在的服务器IP。然后参考我的另一篇文章<a href="https://zuosc.github.io/2017/12/20/使用Let&#39;s%20Encrypt加密你的小站/">使用Let’s Encrypt加密你的小站</a>对你的transmission站进行HTTPS加密，确保安全性。</p><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><p>因为我们修改了默认的下载路径，而那个目录，默认安装的transmission是没有读写权限的，而且安装的transmission的用户组是debian-transmission。所以赋予权限，改权限吧。<br>1、赋予权限<br>切到home目录下，执行<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -<span class="selector-tag">a</span> -G debian-transmission root</span><br><span class="line">sudo chgrp -R debian-transmission ./transmission-daemon/</span><br></pre></td></tr></table></figure></p><p>2、粗暴修改为777权限<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 <span class="string">./transmission-daemon</span>  </span><br><span class="line">sudo chmod -R 777 <span class="string">./downloads</span> <span class="comment"># 切到transmission-daemon下，执行</span></span><br></pre></td></tr></table></figure></p><p>然后再启动就可以了,启动命令：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>transmission-daemon start</span><br></pre></td></tr></table></figure></p><h1 id="移动端APP"><a href="#移动端APP" class="headerlink" title="移动端APP"></a>移动端APP</h1><p>似乎IOS端是没有APP的，安卓端有一个不错的:<a href="https://play.google.com/store/apps/details?id=com.neogb.rtac" target="_blank" rel="noopener">Google Play 地址</a></p><h2 id="新版UI"><a href="#新版UI" class="headerlink" title="新版UI"></a>新版UI</h2><p>因为原版的web UI很简陋，所以有大神就重新开发了新的UI界面，GitHub地址：<a href="https://github.com/ronggang/transmission-web-control" target="_blank" rel="noopener">GitHub地址</a></p><h2 id="使用中遇到的问题"><a href="#使用中遇到的问题" class="headerlink" title="使用中遇到的问题"></a>使用中遇到的问题</h2><p>1、RSS功能<br>网上查了下，似乎是有额外的插件的，不过需要自己折腾。因为硬盘小，就暂时不折腾了。</p><p>2、崩溃的问题<br>自己的小鸡配置比较低，1核，512内存，1G swap。今天频繁stop和star了几次transmission服务。后来启动之后就特别容易崩溃，表现为内存用满，swap也用满了，然后就崩溃了、、、后重启主机解决。感觉配置低的小鸡，还是要考虑下定时重启。</p><h2 id="求药"><a href="#求药" class="headerlink" title="求药"></a>求药</h2><p>顺带求个邀吧。。。缺CHD。愿意发药的大佬，请和我说下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://transmissionbt.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;T
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://zuosc.github.io/tags/ubuntu/"/>
    
      <category term="Transmission" scheme="https://zuosc.github.io/tags/Transmission/"/>
    
      <category term="PT" scheme="https://zuosc.github.io/tags/PT/"/>
    
  </entry>
  
  <entry>
    <title>服务集合</title>
    <link href="https://zuosc.github.io/2017/12/22/%E5%AF%B9%E5%A4%96%E6%9C%8D%E5%8A%A1%E9%9B%86%E5%90%88/"/>
    <id>https://zuosc.github.io/2017/12/22/对外服务集合/</id>
    <published>2017-12-22T09:40:49.000Z</published>
    <updated>2018-06-21T09:37:07.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="服务集合"><a href="#服务集合" class="headerlink" title="服务集合"></a>服务集合</h2><p>1、http(s)://key.123456.cloud(JetBrains 激活服务器)</p><p>2、kms.123456.cloud (看二级域名你就知道了)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;服务集合&quot;&gt;&lt;a href=&quot;#服务集合&quot; class=&quot;headerlink&quot; title=&quot;服务集合&quot;&gt;&lt;/a&gt;服务集合&lt;/h2&gt;&lt;p&gt;1、http(s)://key.123456.cloud(JetBrains 激活服务器)&lt;/p&gt;
&lt;p&gt;2、kms.123
      
    
    </summary>
    
    
      <category term="KMS" scheme="https://zuosc.github.io/tags/KMS/"/>
    
      <category term="Jetbrains" scheme="https://zuosc.github.io/tags/Jetbrains/"/>
    
      <category term="JetBrains激活服务器" scheme="https://zuosc.github.io/tags/JetBrains%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="IDEA激活服务器" scheme="https://zuosc.github.io/tags/IDEA%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>使用Let&#39;s Encrypt加密你的小站</title>
    <link href="https://zuosc.github.io/2017/12/20/%E4%BD%BF%E7%94%A8Let&#39;s%20Encrypt%E5%8A%A0%E5%AF%86%E4%BD%A0%E7%9A%84%E5%B0%8F%E7%AB%99/"/>
    <id>https://zuosc.github.io/2017/12/20/使用Let&#39;s Encrypt加密你的小站/</id>
    <published>2017-12-20T10:39:49.000Z</published>
    <updated>2017-12-21T05:07:13.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a>是一个免费并且开源的CA，且已经获得Mozilla、微软等主要浏览器厂商的根授信。它极大低降低DV证书的入门门槛，进而推进全网的HTTPS化。</p><p><a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a> is an easy-to-use client that fetches a certificate from Let’s Encrypt—an open certificate authority launched by the EFF, Mozilla, and others—and deploys it to a web server.</p><p>本文所有的操作均在Ubuntu14.04下进行安装和配置。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接安装Let’s Encrypt相对比较复杂和费事。为了简化安装步骤，我们就直接使用 Let’s Encrypt 官网推荐的自动部署脚本<a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a>。<br>根据环境选择，我们选择Nginx+Ubuntu14.04，进入官方推荐脚本<a href="https://certbot.eff.org/#ubuntutrusty-nginx" target="_blank" rel="noopener">页面</a>，脚本如下：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo<span class="built_in"> add-apt-repository </span>ppa:certbot/certbot</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install python-certbot-nginx</span><br></pre></td></tr></table></figure></p><p>因为我本机已经有了python和Nginx，所以我的脚本简化为了<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:certbot/certbot</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install certbot</span><br></pre></td></tr></table></figure></p><p>接下来，我们要生成自己的证书。</p><ul><li><p>获取证书前需要先停止 Nginx 服务</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx <span class="built_in">stop</span></span><br></pre></td></tr></table></figure></li><li><p>生成单域名证书</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly <span class="comment">--standalone --email your@email.com -d yourdomain.com</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Tips:<br>yourdomain.com目前必须是你的绝对域名，因为Let’s Encrypt暂时还不支持泛域名，但是根据官方的消息说，预计2018年一月，会实现支持。<a href="https://letsencrypt.org/2017/07/06/wildcard-certificates-coming-jan-2018.html" target="_blank" rel="noopener">Wildcard Certificates Coming January 2018</a></p></blockquote><p>到此，如果没有什么意外，执行完命令之后，你就可以看到你的证书创建成功的提示！默认是在 /etc/letsencrypt/live 路径下。</p><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>有了证书，接下来我们就可以配置Nginx了。<br>进入Nginx的配置文件夹（/etc/nginx/sites-available/），创建一个ssl.conf配置文件，在里面增加一个server配置。<br>配置的内容，基本和监听http的配置相似，主要的区别是监听443端口和证书的加载，一个例子如下：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="comment"># SSL configuration</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line"><span class="attribute">listen</span> [::]:<span class="number">443</span> ssl;</span><br><span class="line"><span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_certificate</span>   /etc/letsencrypt/live/<span class="number">123456</span>.cloud/fullchain.pem;</span><br><span class="line"><span class="attribute">ssl_certificate_key</span>  /etc/letsencrypt/live/<span class="number">123456</span>.cloud/privkey.pem;</span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line"><span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line"><span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">root</span> /var/www/html;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">                <span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line">                <span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">                <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">                <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存，然后reload ngxin（nginx -s reload）配置。这时候我们就可以在域名前加上https，就可以发现成功了！</p><h2 id="仅限Https访问"><a href="#仅限Https访问" class="headerlink" title="仅限Https访问"></a>仅限Https访问</h2><p>有了Https，我们一般也就不想要http的访问了，或者说想把所有的http请求转为https。方法有很多种，我的方法是使用rewrite，把原先的Http全部转化为Https。<br>一个例子如下：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span> default_server;</span><br><span class="line"><span class="attribute">listen</span> [::]:<span class="number">80</span> default_server;</span><br><span class="line"></span><br><span class="line"><span class="attribute">server_name</span> <span class="number">123456</span>.cloud;</span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^(.*)</span> https://<span class="variable">$server_name</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>自此，个人小站的Https加密工作完成。</p><h2 id="Github-Pages使用Https"><a href="#Github-Pages使用Https" class="headerlink" title="Github Pages使用Https"></a>Github Pages使用Https</h2><p>一般来说，我们都会把自己的Github Pages博客定义成自己的域名。但是会发现，变为自己的域名之后，就没有Https了。所以为了能让我们的博客也用上Https，这时候也要折腾一下了。<br>原理很简单，就是用自己的服务器进行反向代理,实际上访问Github Pages博客就是访问自己的服务器。<br>我自己的配置如下，<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment"># SSL configuration</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> blog.<span class="number">123456</span>.cloud;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_certificate</span>   /etc/letsencrypt/live/blog.<span class="number">123456</span>.cloud/fullchain.pem;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span>  /etc/letsencrypt/live/blog.<span class="number">123456</span>.cloud/privkey.pem;</span><br><span class="line">        <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">        <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">        <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">        <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">                <span class="attribute">proxy_set_header</span>   X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span>   X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span>   Host <span class="variable">$http_host</span>;</span><br><span class="line">                <span class="attribute">proxy_pass</span>         http://151.101.229.147;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里需要注意的是，proxy_pass的地址是ping自己的Github Pages地址得到的，也就是那个.io结尾的地址。然后在你的域名提供商那里，修改你博客的A地址解析就可以了。<br>这里有个细节需要注意的是，ping自己的GitHub Pages，应该在Nginx所在的服务器进行ping，这样得到的IP是最快的！<br>当然，如果这里你也仅限Https访问的话，把你的http监听也进行rewrite一下就好了！</p><h2 id="证书续期"><a href="#证书续期" class="headerlink" title="证书续期"></a>证书续期</h2><p>Let’s Encrypt 生成的免费证书为3个月时间，使用 certbot renew 可以无限免费续签 Https 证书。<br>为了方便，我们可以使用crontab进行自动续期。注意在使用certbot renew的时候，要先关闭nginx才能成功。</p><h2 id="常见的问题"><a href="#常见的问题" class="headerlink" title="常见的问题"></a>常见的问题</h2><p>1、<strong><em>Problem binding to port 443: Could not bind to IPv4 or IPv6.. Skipping</em></strong><br>原因和解决方案：这是因为80、443端口被占用，解除对端口的占用即可，例如执行 service nginx stop ^_^</p><p>2、<strong><em>DNS解析生效慢</em></strong><br>解决方案：你的域名供应商一般都会提供DNS服务器，ping一下dns服务器，得到IP。然后在你本机的DNS配置里，换成ping DNS服务器得到IP即可。</p><p>3、<strong><em>Nginx配置不起作用，DNS也不起作用</em></strong><br>解决方案：<br>    (1)、换除Chrome以外的浏览器<br>    (2)、在Chrome中，F12打开控制台，按住刷新按钮，选择‘清空缓存并硬性重新加载’<br>Chrome为了加快速度，这个的缓存机制倒是挺讨厌的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Let’
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://zuosc.github.io/tags/ubuntu/"/>
    
      <category term="Let&#39;s Encrypt" scheme="https://zuosc.github.io/tags/Let-s-Encrypt/"/>
    
      <category term="Nginx" scheme="https://zuosc.github.io/tags/Nginx/"/>
    
      <category term="ssl" scheme="https://zuosc.github.io/tags/ssl/"/>
    
      <category term="GitHub Pages" scheme="https://zuosc.github.io/tags/GitHub-Pages/"/>
    
      <category term="letsencrypt" scheme="https://zuosc.github.io/tags/letsencrypt/"/>
    
      <category term="https" scheme="https://zuosc.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu中搭建KMS服务器</title>
    <link href="https://zuosc.github.io/2017/11/11/%E5%9C%A8Ubuntu%E4%B8%AD%E6%90%AD%E5%BB%BAKMS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://zuosc.github.io/2017/11/11/在Ubuntu中搭建KMS服务器/</id>
    <published>2017-11-11T11:02:49.000Z</published>
    <updated>2017-12-21T14:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>基于<a href="https://github.com/Wind4/vlmcsd" target="_blank" rel="noopener">vlmcsd</a>搭建的KMS服务器。<br>根据github上的说明，这个工具是用C写的，没有任何依赖，可以直接运行。而且它横跨几乎现在所有的系统平台，如Android, FreeBSD, Solaris, Minix, Mac OS, iOS, Windows。相比于另一款工具<a href="https://github.com/myanaloglife/py-kms" target="_blank" rel="noopener">py-kms</a>需要依赖pyhont2或者python3，可谓是非常干净舒爽。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1、在任意环境中，下载最新的vlmcsd releases版本，<a href="https://github.com/Wind4/vlmcsd/releases" target="_blank" rel="noopener">下载地址</a>。如在linux中，可以使用wget下载：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/Wind4/</span>vlmcsd<span class="regexp">/releases/</span>download<span class="regexp">/svn1111/</span>binaries.tar.gz</span><br></pre></td></tr></table></figure></p><p>2、解压我们下载的包，进入对应的目录。如Ubuntu系统，我们可以进入binaries/Linux/intel/static目录中</p><p>3、选择对应的文件，这里我们选择vlmcsdmulti-x64-musl-static文件。然后把这个文件放到我们想要的文件中。</p><p>4、执行chmod命令，为这个文件赋予权限：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">chmod</span> u+<span class="keyword">x</span> /usr/<span class="keyword">local</span>/KMS-server</span><br></pre></td></tr></table></figure></p><p>权限赋予完毕之后，直接执行命令<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vlmcsdmulti-x64-musl-<span class="keyword">static</span> vlmcsd</span><br></pre></td></tr></table></figure></p><p>如果没有任何错误提示，代表我们成功了。不放心的话，可以再执行一遍，会提示我们端口(1688)和地址已经被占用。</p><p>5、若有防火墙，记得把1688端口开放，然后加入自启动。如在Ubuntu中，可以编辑/etc/rc.local文件，在启动项里加入启动命令。</p><p>6、复制以下文本<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/d</span> <span class="string">"%SystemRoot%\system32"</span></span><br><span class="line">slmgr <span class="string">/skms</span> 你的VPS的IP或者域名,域名似乎不能加http之类的</span><br><span class="line">slmgr <span class="string">/ato</span></span><br><span class="line">slmgr <span class="string">/xpr</span></span><br></pre></td></tr></table></figure></p><p>存成bat格式的文件，然后右键以<font color="red" size="3"><strong>管理员身份</strong></font>运行。</p><p>7、验证是否激活。在cmd或powershell中执行<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr<span class="selector-class">.vbs</span> -dlv</span><br></pre></td></tr></table></figure></p><p>不出意外的话，会显示已经激活成功的信息。  </p><p>8、这个kms激活服务器，同样可以用来激活office，原理基本一致。可以参考原作者的<a href="http://wind4.github.io/vlmcsd/" target="_blank" rel="noopener">github pages</a>进行激活。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;基于&lt;a href=&quot;https://github.com/Wind4/vlmcsd&quot; target=&quot;_blank&quot; rel=&quot;noope
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://zuosc.github.io/tags/ubuntu/"/>
    
      <category term="kms" scheme="https://zuosc.github.io/tags/kms/"/>
    
      <category term="激活服务器" scheme="https://zuosc.github.io/tags/%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="vlmcsd" scheme="https://zuosc.github.io/tags/vlmcsd/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zuosc.github.io/2017/11/11/hello-world/"/>
    <id>https://zuosc.github.io/2017/11/11/hello-world/</id>
    <published>2017-11-11T10:35:08.538Z</published>
    <updated>2017-11-11T10:35:08.538Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
